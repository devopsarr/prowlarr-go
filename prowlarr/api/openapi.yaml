openapi: 3.0.1
info:
  description: Prowlarr API docs
  license:
    name: GPL-3.0
    url: https://github.com/Prowlarr/Prowlarr/blob/develop/LICENSE
  title: Prowlarr
  version: 1.0.0
servers:
- url: "{protocol}://{hostpath}"
  variables:
    protocol:
      default: http
      enum:
      - http
      - https
    hostpath:
      default: localhost:9696
security:
- X-Api-Key: []
- apikey: []
paths:
  /api:
    get:
      operationId: GetApi
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiInfoResource'
          description: Success
      tags:
      - ApiInfo
  /api/v1/applications/{id}:
    delete:
      operationId: DeleteApplications
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - Application
    get:
      operationId: GetApplicationsById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApplicationResource'
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResource'
            text/json:
              schema:
                $ref: '#/components/schemas/ApplicationResource'
          description: Success
      tags:
      - Application
    put:
      operationId: UpdateApplications
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationResource'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApplicationResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResource'
          description: Success
      tags:
      - Application
  /api/v1/applications:
    get:
      operationId: ListApplications
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationResource'
                type: array
          description: Success
      tags:
      - Application
    post:
      operationId: CreateApplications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationResource'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApplicationResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResource'
          description: Success
      tags:
      - Application
  /api/v1/applications/schema:
    get:
      operationId: ListApplicationsSchema
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationResource'
                type: array
          description: Success
      tags:
      - Application
  /api/v1/applications/test:
    post:
      operationId: TestApplications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationResource'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApplicationResource'
      responses:
        "200":
          description: Success
      tags:
      - Application
  /api/v1/applications/testall:
    post:
      operationId: TestallApplications
      responses:
        "200":
          description: Success
      tags:
      - Application
  /api/v1/applications/action/{name}:
    post:
      operationId: CreateApplicationsActionByName
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationResource'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApplicationResource'
      responses:
        "200":
          description: Success
      tags:
      - Application
  /api/v1/appprofile:
    get:
      operationId: ListAppProfile
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppProfileResource'
                type: array
          description: Success
      tags:
      - AppProfile
    post:
      operationId: CreateAppProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppProfileResource'
          text/json:
            schema:
              $ref: '#/components/schemas/AppProfileResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AppProfileResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppProfileResource'
          description: Success
      tags:
      - AppProfile
  /api/v1/appprofile/{id}:
    delete:
      operationId: DeleteAppProfile
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - AppProfile
    get:
      operationId: GetAppProfileById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppProfileResource'
          description: Success
        "404":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Not Found
        "500":
          description: Server Error
      tags:
      - AppProfile
    put:
      operationId: UpdateAppProfile
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppProfileResource'
          text/json:
            schema:
              $ref: '#/components/schemas/AppProfileResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AppProfileResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppProfileResource'
          description: Success
      tags:
      - AppProfile
  /login:
    get:
      operationId: GetLogin
      responses:
        "200":
          description: Success
      tags:
      - StaticResource
    post:
      operationId: CreateLogin
      parameters:
      - explode: true
        in: query
        name: returnUrl
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          multipart/form-data:
            encoding:
              Username:
                style: form
              Password:
                style: form
              RememberMe:
                style: form
            schema:
              $ref: '#/components/schemas/CreateLogin_request'
      responses:
        "200":
          description: Success
      tags:
      - Authentication
  /logout:
    get:
      operationId: GetLogout
      responses:
        "200":
          description: Success
      tags:
      - Authentication
  /api/v1/system/backup:
    get:
      operationId: ListSystemBackup
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/BackupResource'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BackupResource'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/BackupResource'
                type: array
          description: Success
      tags:
      - Backup
  /api/v1/system/backup/{id}:
    delete:
      operationId: DeleteSystemBackup
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - Backup
  /api/v1/system/backup/restore/{id}:
    post:
      operationId: CreateSystemBackupRestoreById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - Backup
  /api/v1/system/backup/restore/upload:
    post:
      operationId: CreateSystemBackupRestoreUpload
      responses:
        "200":
          description: Success
      tags:
      - Backup
  /api/v1/command/{id}:
    delete:
      operationId: DeleteCommand
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - Command
    get:
      operationId: GetCommandById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CommandResource'
            application/json:
              schema:
                $ref: '#/components/schemas/CommandResource'
            text/json:
              schema:
                $ref: '#/components/schemas/CommandResource'
          description: Success
      tags:
      - Command
  /api/v1/command:
    get:
      operationId: ListCommand
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommandResource'
                type: array
          description: Success
      tags:
      - Command
    post:
      operationId: CreateCommand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandResource'
          text/json:
            schema:
              $ref: '#/components/schemas/CommandResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CommandResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandResource'
          description: Success
      tags:
      - Command
  /api/v1/customfilter/{id}:
    delete:
      operationId: DeleteCustomFilter
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - CustomFilter
    get:
      operationId: GetCustomFilterById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomFilterResource'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFilterResource'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomFilterResource'
          description: Success
      tags:
      - CustomFilter
    put:
      operationId: UpdateCustomFilter
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFilterResource'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomFilterResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomFilterResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFilterResource'
          description: Success
      tags:
      - CustomFilter
  /api/v1/customfilter:
    get:
      operationId: ListCustomFilter
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomFilterResource'
                type: array
          description: Success
      tags:
      - CustomFilter
    post:
      operationId: CreateCustomFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFilterResource'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomFilterResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomFilterResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFilterResource'
          description: Success
      tags:
      - CustomFilter
  /api/v1/config/development/{id}:
    get:
      operationId: GetDevelopmentConfigById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DevelopmentConfigResource'
            application/json:
              schema:
                $ref: '#/components/schemas/DevelopmentConfigResource'
            text/json:
              schema:
                $ref: '#/components/schemas/DevelopmentConfigResource'
          description: Success
      tags:
      - DevelopmentConfig
    put:
      operationId: UpdateDevelopmentConfig
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevelopmentConfigResource'
          text/json:
            schema:
              $ref: '#/components/schemas/DevelopmentConfigResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DevelopmentConfigResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevelopmentConfigResource'
          description: Success
      tags:
      - DevelopmentConfig
  /api/v1/config/development:
    get:
      operationId: GetDevelopmentConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevelopmentConfigResource'
          description: Success
      tags:
      - DevelopmentConfig
  /api/v1/downloadclient/{id}:
    delete:
      operationId: DeleteDownloadClient
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - DownloadClient
    get:
      operationId: GetDownloadClientById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DownloadClientResource'
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadClientResource'
            text/json:
              schema:
                $ref: '#/components/schemas/DownloadClientResource'
          description: Success
      tags:
      - DownloadClient
    put:
      operationId: UpdateDownloadClient
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadClientResource'
          text/json:
            schema:
              $ref: '#/components/schemas/DownloadClientResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DownloadClientResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadClientResource'
          description: Success
      tags:
      - DownloadClient
  /api/v1/downloadclient:
    get:
      operationId: ListDownloadClient
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DownloadClientResource'
                type: array
          description: Success
      tags:
      - DownloadClient
    post:
      operationId: CreateDownloadClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadClientResource'
          text/json:
            schema:
              $ref: '#/components/schemas/DownloadClientResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DownloadClientResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadClientResource'
          description: Success
      tags:
      - DownloadClient
  /api/v1/downloadclient/schema:
    get:
      operationId: ListDownloadClientSchema
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DownloadClientResource'
                type: array
          description: Success
      tags:
      - DownloadClient
  /api/v1/downloadclient/test:
    post:
      operationId: TestDownloadClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadClientResource'
          text/json:
            schema:
              $ref: '#/components/schemas/DownloadClientResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DownloadClientResource'
      responses:
        "200":
          description: Success
      tags:
      - DownloadClient
  /api/v1/downloadclient/testall:
    post:
      operationId: TestallDownloadClient
      responses:
        "200":
          description: Success
      tags:
      - DownloadClient
  /api/v1/downloadclient/action/{name}:
    post:
      operationId: CreateDownloadClientActionByName
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadClientResource'
          text/json:
            schema:
              $ref: '#/components/schemas/DownloadClientResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DownloadClientResource'
      responses:
        "200":
          description: Success
      tags:
      - DownloadClient
  /api/v1/config/downloadclient/{id}:
    get:
      operationId: GetDownloadClientConfigById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DownloadClientConfigResource'
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadClientConfigResource'
            text/json:
              schema:
                $ref: '#/components/schemas/DownloadClientConfigResource'
          description: Success
      tags:
      - DownloadClientConfig
    put:
      operationId: UpdateDownloadClientConfig
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadClientConfigResource'
          text/json:
            schema:
              $ref: '#/components/schemas/DownloadClientConfigResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DownloadClientConfigResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadClientConfigResource'
          description: Success
      tags:
      - DownloadClientConfig
  /api/v1/config/downloadclient:
    get:
      operationId: GetDownloadClientConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadClientConfigResource'
          description: Success
      tags:
      - DownloadClientConfig
  /api/v1/filesystem:
    get:
      operationId: GetFileSystem
      parameters:
      - explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: includeFiles
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: allowFoldersWithoutTrailingSlashes
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          description: Success
      tags:
      - FileSystem
  /api/v1/filesystem/type:
    get:
      operationId: GetFileSystemType
      parameters:
      - explode: true
        in: query
        name: path
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
      tags:
      - FileSystem
  /api/v1/health/{id}:
    get:
      operationId: GetHealthById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/HealthResource'
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResource'
            text/json:
              schema:
                $ref: '#/components/schemas/HealthResource'
          description: Success
      tags:
      - Health
  /api/v1/health:
    get:
      operationId: ListHealth
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HealthResource'
                type: array
          description: Success
      tags:
      - Health
  /api/v1/history:
    get:
      operationId: GetHistory
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoryResourcePagingResource'
          description: Success
      tags:
      - History
  /api/v1/history/since:
    get:
      operationId: ListHistorySince
      parameters:
      - explode: true
        in: query
        name: date
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: eventType
        required: false
        schema:
          $ref: '#/components/schemas/HistoryEventType'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HistoryResource'
                type: array
          description: Success
      tags:
      - History
  /api/v1/history/indexer:
    get:
      operationId: ListHistoryIndexer
      parameters:
      - explode: true
        in: query
        name: indexerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: eventType
        required: false
        schema:
          $ref: '#/components/schemas/HistoryEventType'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HistoryResource'
                type: array
          description: Success
      tags:
      - History
  /api/v1/config/host/{id}:
    get:
      operationId: GetHostConfigById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/HostConfigResource'
            application/json:
              schema:
                $ref: '#/components/schemas/HostConfigResource'
            text/json:
              schema:
                $ref: '#/components/schemas/HostConfigResource'
          description: Success
      tags:
      - HostConfig
    put:
      operationId: UpdateHostConfig
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostConfigResource'
          text/json:
            schema:
              $ref: '#/components/schemas/HostConfigResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/HostConfigResource'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/HostConfigResource'
            application/json:
              schema:
                $ref: '#/components/schemas/HostConfigResource'
            text/json:
              schema:
                $ref: '#/components/schemas/HostConfigResource'
          description: Success
      tags:
      - HostConfig
  /api/v1/config/host:
    get:
      operationId: GetHostConfig
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/HostConfigResource'
            application/json:
              schema:
                $ref: '#/components/schemas/HostConfigResource'
            text/json:
              schema:
                $ref: '#/components/schemas/HostConfigResource'
          description: Success
      tags:
      - HostConfig
  /api/v1/indexer/{id}:
    delete:
      operationId: DeleteIndexer
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - Indexer
    get:
      operationId: GetIndexerById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IndexerResource'
            application/json:
              schema:
                $ref: '#/components/schemas/IndexerResource'
            text/json:
              schema:
                $ref: '#/components/schemas/IndexerResource'
          description: Success
      tags:
      - Indexer
    put:
      operationId: UpdateIndexer
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexerResource'
          text/json:
            schema:
              $ref: '#/components/schemas/IndexerResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IndexerResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexerResource'
          description: Success
      tags:
      - Indexer
  /api/v1/indexer:
    get:
      operationId: ListIndexer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IndexerResource'
                type: array
          description: Success
      tags:
      - Indexer
    post:
      operationId: CreateIndexer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexerResource'
          text/json:
            schema:
              $ref: '#/components/schemas/IndexerResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IndexerResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexerResource'
          description: Success
      tags:
      - Indexer
  /api/v1/indexer/schema:
    get:
      operationId: ListIndexerSchema
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IndexerResource'
                type: array
          description: Success
      tags:
      - Indexer
  /api/v1/indexer/test:
    post:
      operationId: TestIndexer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexerResource'
          text/json:
            schema:
              $ref: '#/components/schemas/IndexerResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IndexerResource'
      responses:
        "200":
          description: Success
      tags:
      - Indexer
  /api/v1/indexer/testall:
    post:
      operationId: TestallIndexer
      responses:
        "200":
          description: Success
      tags:
      - Indexer
  /api/v1/indexer/action/{name}:
    post:
      operationId: CreateIndexerActionByName
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexerResource'
          text/json:
            schema:
              $ref: '#/components/schemas/IndexerResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IndexerResource'
      responses:
        "200":
          description: Success
      tags:
      - Indexer
  /api/v1/indexer/categories:
    get:
      operationId: ListIndexerCategories
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/IndexerCategory'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IndexerCategory'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/IndexerCategory'
                type: array
          description: Success
      tags:
      - IndexerDefaultCategories
  /api/v1/indexer/editor:
    delete:
      operationId: DeleteIndexerEditor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexerEditorResource'
          text/json:
            schema:
              $ref: '#/components/schemas/IndexerEditorResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IndexerEditorResource'
      responses:
        "200":
          description: Success
      tags:
      - IndexerEditor
    put:
      operationId: PutIndexerEditor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexerEditorResource'
          text/json:
            schema:
              $ref: '#/components/schemas/IndexerEditorResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IndexerEditorResource'
      responses:
        "200":
          description: Success
      tags:
      - IndexerEditor
  /api/v1/indexerproxy/{id}:
    delete:
      operationId: DeleteIndexerProxy
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - IndexerProxy
    get:
      operationId: GetIndexerProxyById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IndexerProxyResource'
            application/json:
              schema:
                $ref: '#/components/schemas/IndexerProxyResource'
            text/json:
              schema:
                $ref: '#/components/schemas/IndexerProxyResource'
          description: Success
      tags:
      - IndexerProxy
    put:
      operationId: UpdateIndexerProxy
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexerProxyResource'
          text/json:
            schema:
              $ref: '#/components/schemas/IndexerProxyResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IndexerProxyResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexerProxyResource'
          description: Success
      tags:
      - IndexerProxy
  /api/v1/indexerproxy:
    get:
      operationId: ListIndexerProxy
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IndexerProxyResource'
                type: array
          description: Success
      tags:
      - IndexerProxy
    post:
      operationId: CreateIndexerProxy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexerProxyResource'
          text/json:
            schema:
              $ref: '#/components/schemas/IndexerProxyResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IndexerProxyResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexerProxyResource'
          description: Success
      tags:
      - IndexerProxy
  /api/v1/indexerproxy/schema:
    get:
      operationId: ListIndexerProxySchema
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IndexerProxyResource'
                type: array
          description: Success
      tags:
      - IndexerProxy
  /api/v1/indexerproxy/test:
    post:
      operationId: TestIndexerProxy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexerProxyResource'
          text/json:
            schema:
              $ref: '#/components/schemas/IndexerProxyResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IndexerProxyResource'
      responses:
        "200":
          description: Success
      tags:
      - IndexerProxy
  /api/v1/indexerproxy/testall:
    post:
      operationId: TestallIndexerProxy
      responses:
        "200":
          description: Success
      tags:
      - IndexerProxy
  /api/v1/indexerproxy/action/{name}:
    post:
      operationId: CreateIndexerProxyActionByName
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndexerProxyResource'
          text/json:
            schema:
              $ref: '#/components/schemas/IndexerProxyResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IndexerProxyResource'
      responses:
        "200":
          description: Success
      tags:
      - IndexerProxy
  /api/v1/indexerstats:
    get:
      operationId: GetIndexerStats
      parameters:
      - explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IndexerStatsResource'
            application/json:
              schema:
                $ref: '#/components/schemas/IndexerStatsResource'
            text/json:
              schema:
                $ref: '#/components/schemas/IndexerStatsResource'
          description: Success
      tags:
      - IndexerStats
  /api/v1/indexerstatus/{id}:
    get:
      operationId: GetIndexerStatusById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IndexerStatusResource'
            application/json:
              schema:
                $ref: '#/components/schemas/IndexerStatusResource'
            text/json:
              schema:
                $ref: '#/components/schemas/IndexerStatusResource'
          description: Success
      tags:
      - IndexerStatus
  /api/v1/indexerstatus:
    get:
      operationId: ListIndexerStatus
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/IndexerStatusResource'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IndexerStatusResource'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/IndexerStatusResource'
                type: array
          description: Success
      tags:
      - IndexerStatus
  /initialize.js:
    get:
      operationId: GetInitialize.js
      responses:
        "200":
          description: Success
      tags:
      - InitializeJs
  /api/v1/localization:
    get:
      operationId: GetLocalization
      responses:
        "200":
          description: Success
      tags:
      - Localization
  /api/v1/localization/options:
    get:
      operationId: ListLocalizationOptions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LocalizationOption'
                type: array
          description: Success
      tags:
      - Localization
  /api/v1/log:
    get:
      operationId: GetLog
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LogResourcePagingResource'
            application/json:
              schema:
                $ref: '#/components/schemas/LogResourcePagingResource'
            text/json:
              schema:
                $ref: '#/components/schemas/LogResourcePagingResource'
          description: Success
      tags:
      - Log
  /api/v1/log/file:
    get:
      operationId: ListLogFile
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/LogFileResource'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LogFileResource'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/LogFileResource'
                type: array
          description: Success
      tags:
      - LogFile
  /api/v1/log/file/{filename}:
    get:
      operationId: GetLogFileByFilename
      parameters:
      - explode: false
        in: path
        name: filename
        required: true
        schema:
          pattern: "[-.a-zA-Z0-9]+?\\.txt"
          type: string
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - LogFile
  /api/v1/indexer/{id}/newznab:
    get:
      operationId: "GetIndexer{id}Newznab"
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: t
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: cat
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: imdbid
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: tmdbid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: extended
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: rid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: tvmazeid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: traktid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: tvdbid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: doubanid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: season
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: ep
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: album
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: artist
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: track
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: year
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: genre
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: author
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: title
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: publisher
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: configured
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: source
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: host
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: server
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
      tags:
      - Newznab
  /{id}/api:
    get:
      operationId: "Get{id}Api"
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: t
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: cat
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: imdbid
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: tmdbid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: extended
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: rid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: tvmazeid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: traktid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: tvdbid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: doubanid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: season
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: ep
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: album
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: artist
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: track
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: year
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: genre
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: author
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: title
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: publisher
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: configured
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: source
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: host
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: server
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
      tags:
      - Newznab
  /api/v1/indexer/{id}/download:
    get:
      operationId: "GetIndexer{id}Download"
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: link
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: file
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
      tags:
      - Newznab
  /{id}/download:
    get:
      operationId: "Get{id}Download"
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: link
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: file
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
      tags:
      - Newznab
  /api/v1/notification/{id}:
    delete:
      operationId: DeleteNotification
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - Notification
    get:
      operationId: GetNotificationById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/NotificationResource'
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResource'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationResource'
          description: Success
      tags:
      - Notification
    put:
      operationId: UpdateNotification
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationResource'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NotificationResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResource'
          description: Success
      tags:
      - Notification
  /api/v1/notification:
    get:
      operationId: ListNotification
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NotificationResource'
                type: array
          description: Success
      tags:
      - Notification
    post:
      operationId: CreateNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationResource'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NotificationResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResource'
          description: Success
      tags:
      - Notification
  /api/v1/notification/schema:
    get:
      operationId: ListNotificationSchema
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NotificationResource'
                type: array
          description: Success
      tags:
      - Notification
  /api/v1/notification/test:
    post:
      operationId: TestNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationResource'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NotificationResource'
      responses:
        "200":
          description: Success
      tags:
      - Notification
  /api/v1/notification/testall:
    post:
      operationId: TestallNotification
      responses:
        "200":
          description: Success
      tags:
      - Notification
  /api/v1/notification/action/{name}:
    post:
      operationId: CreateNotificationActionByName
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationResource'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NotificationResource'
      responses:
        "200":
          description: Success
      tags:
      - Notification
  /ping:
    get:
      operationId: GetPing
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResource'
          description: Success
      tags:
      - Ping
  /api/v1/appprofile/schema:
    get:
      operationId: GetAppprofileSchema
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppProfileResource'
            application/json:
              schema:
                $ref: '#/components/schemas/AppProfileResource'
            text/json:
              schema:
                $ref: '#/components/schemas/AppProfileResource'
          description: Success
      tags:
      - QualityProfileSchema
  /api/v1/search/{id}:
    get:
      operationId: GetSearchById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReleaseResource'
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseResource'
            text/json:
              schema:
                $ref: '#/components/schemas/ReleaseResource'
          description: Success
      tags:
      - Search
  /api/v1/search:
    get:
      operationId: ListSearch
      parameters:
      - explode: true
        in: query
        name: Query
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Type
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: IndexerIds
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: Categories
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: Offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/ReleaseResource'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReleaseResource'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReleaseResource'
                type: array
          description: Success
      tags:
      - Search
    post:
      operationId: CreateSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseResource'
          text/json:
            schema:
              $ref: '#/components/schemas/ReleaseResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReleaseResource'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReleaseResource'
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseResource'
            text/json:
              schema:
                $ref: '#/components/schemas/ReleaseResource'
          description: Success
      tags:
      - Search
  /api/v1/search/bulk:
    post:
      operationId: CreateSearchBulk
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ReleaseResource'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/ReleaseResource'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/ReleaseResource'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReleaseResource'
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseResource'
            text/json:
              schema:
                $ref: '#/components/schemas/ReleaseResource'
          description: Success
      tags:
      - Search
  /content/{path}:
    get:
      operationId: GetContentByPath
      parameters:
      - explode: false
        in: path
        name: path
        required: true
        schema:
          pattern: ^(?!api/).*
          type: string
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - StaticResource
  /:
    get:
      operationId: Get
      parameters:
      - explode: false
        in: path
        name: path
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - StaticResource
  /{path}:
    get:
      operationId: GetByPath
      parameters:
      - explode: false
        in: path
        name: path
        required: true
        schema:
          pattern: ^(?!api/).*
          type: string
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - StaticResource
  /api/v1/system/status:
    get:
      operationId: GetSystemStatus
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SystemResource'
            application/json:
              schema:
                $ref: '#/components/schemas/SystemResource'
            text/json:
              schema:
                $ref: '#/components/schemas/SystemResource'
          description: Success
      tags:
      - System
  /api/v1/system/routes:
    get:
      operationId: GetSystemRoutes
      responses:
        "200":
          description: Success
      tags:
      - System
  /api/v1/system/routes/duplicate:
    get:
      operationId: GetSystemRoutesDuplicate
      responses:
        "200":
          description: Success
      tags:
      - System
  /api/v1/system/shutdown:
    post:
      operationId: CreateSystemShutdown
      responses:
        "200":
          description: Success
      tags:
      - System
  /api/v1/system/restart:
    post:
      operationId: CreateSystemRestart
      responses:
        "200":
          description: Success
      tags:
      - System
  /api/v1/tag/{id}:
    delete:
      operationId: DeleteTag
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - Tag
    get:
      operationId: GetTagById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagResource'
            application/json:
              schema:
                $ref: '#/components/schemas/TagResource'
            text/json:
              schema:
                $ref: '#/components/schemas/TagResource'
          description: Success
      tags:
      - Tag
    put:
      operationId: UpdateTag
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource'
          text/json:
            schema:
              $ref: '#/components/schemas/TagResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TagResource'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagResource'
            application/json:
              schema:
                $ref: '#/components/schemas/TagResource'
            text/json:
              schema:
                $ref: '#/components/schemas/TagResource'
          description: Success
      tags:
      - Tag
  /api/v1/tag:
    get:
      operationId: ListTag
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/TagResource'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TagResource'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/TagResource'
                type: array
          description: Success
      tags:
      - Tag
    post:
      operationId: CreateTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource'
          text/json:
            schema:
              $ref: '#/components/schemas/TagResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TagResource'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagResource'
            application/json:
              schema:
                $ref: '#/components/schemas/TagResource'
            text/json:
              schema:
                $ref: '#/components/schemas/TagResource'
          description: Success
      tags:
      - Tag
  /api/v1/tag/detail/{id}:
    get:
      operationId: GetTagDetailById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagDetailsResource'
            application/json:
              schema:
                $ref: '#/components/schemas/TagDetailsResource'
            text/json:
              schema:
                $ref: '#/components/schemas/TagDetailsResource'
          description: Success
      tags:
      - TagDetails
  /api/v1/tag/detail:
    get:
      operationId: ListTagDetail
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/TagDetailsResource'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TagDetailsResource'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/TagDetailsResource'
                type: array
          description: Success
      tags:
      - TagDetails
  /api/v1/system/task:
    get:
      operationId: ListSystemTask
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/TaskResource'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaskResource'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaskResource'
                type: array
          description: Success
      tags:
      - Task
  /api/v1/system/task/{id}:
    get:
      operationId: GetSystemTaskById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TaskResource'
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResource'
            text/json:
              schema:
                $ref: '#/components/schemas/TaskResource'
          description: Success
      tags:
      - Task
  /api/v1/config/ui/{id}:
    get:
      operationId: GetUiConfigById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UiConfigResource'
            application/json:
              schema:
                $ref: '#/components/schemas/UiConfigResource'
            text/json:
              schema:
                $ref: '#/components/schemas/UiConfigResource'
          description: Success
      tags:
      - UiConfig
    put:
      operationId: UpdateUiConfig
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UiConfigResource'
          text/json:
            schema:
              $ref: '#/components/schemas/UiConfigResource'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UiConfigResource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UiConfigResource'
          description: Success
      tags:
      - UiConfig
  /api/v1/config/ui:
    get:
      operationId: GetUiConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UiConfigResource'
          description: Success
      tags:
      - UiConfig
  /api/v1/update:
    get:
      operationId: ListUpdate
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/UpdateResource'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UpdateResource'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/UpdateResource'
                type: array
          description: Success
      tags:
      - Update
  /api/v1/log/file/update:
    get:
      operationId: ListLogFileUpdate
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/LogFileResource'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LogFileResource'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/LogFileResource'
                type: array
          description: Success
      tags:
      - UpdateLogFile
  /api/v1/log/file/update/{filename}:
    get:
      operationId: GetLogFileUpdateByFilename
      parameters:
      - explode: false
        in: path
        name: filename
        required: true
        schema:
          pattern: "[-.a-zA-Z0-9]+?\\.txt"
          type: string
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - UpdateLogFile
components:
  schemas:
    ApiInfoResource:
      additionalProperties: false
      example:
        current: current
        deprecated:
        - deprecated
        - deprecated
      properties:
        current:
          nullable: true
          type: string
        deprecated:
          items:
            type: string
          nullable: true
          type: array
      type: object
    AppProfileResource:
      additionalProperties: false
      example:
        minimumSeeders: 6
        enableAutomaticSearch: true
        enableRss: true
        name: name
        id: 0
        enableInteractiveSearch: true
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        enableRss:
          type: boolean
        enableInteractiveSearch:
          type: boolean
        enableAutomaticSearch:
          type: boolean
        minimumSeeders:
          format: int32
          type: integer
      type: object
    ApplicationResource:
      additionalProperties: false
      example:
        presets:
        - null
        - null
        implementationName: implementationName
        configContract: configContract
        testCommand: testCommand
        implementation: implementation
        name: name
        id: 0
        fields:
        - helpText: helpText
          hidden: hidden
          advanced: true
          selectOptions:
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          selectOptionsProviderAction: selectOptionsProviderAction
          section: section
          label: label
          type: type
          unit: unit
          helpLink: helpLink
          name: name
          placeholder: placeholder
          value: ""
          order: 6
        - helpText: helpText
          hidden: hidden
          advanced: true
          selectOptions:
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          selectOptionsProviderAction: selectOptionsProviderAction
          section: section
          label: label
          type: type
          unit: unit
          helpLink: helpLink
          name: name
          placeholder: placeholder
          value: ""
          order: 6
        message:
          message: message
          type: null
        syncLevel: null
        infoLink: infoLink
        tags:
        - 2
        - 2
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        fields:
          items:
            $ref: '#/components/schemas/Field'
          nullable: true
          type: array
        implementationName:
          nullable: true
          type: string
        implementation:
          nullable: true
          type: string
        configContract:
          nullable: true
          type: string
        infoLink:
          nullable: true
          type: string
        message:
          $ref: '#/components/schemas/ProviderMessage'
        tags:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
          uniqueItems: true
        presets:
          items:
            $ref: '#/components/schemas/ApplicationResource'
          nullable: true
          type: array
        syncLevel:
          $ref: '#/components/schemas/ApplicationSyncLevel'
        testCommand:
          nullable: true
          type: string
      type: object
    ApplicationSyncLevel:
      enum:
      - disabled
      - addOnly
      - fullSync
      type: string
    ApplyTags:
      enum:
      - add
      - remove
      - replace
      type: string
    AuthenticationRequiredType:
      enum:
      - enabled
      - disabledForLocalAddresses
      type: string
    AuthenticationType:
      enum:
      - none
      - basic
      - forms
      - external
      type: string
    BackupResource:
      additionalProperties: false
      example:
        path: path
        size: 6
        name: name
        id: 0
        time: 2000-01-23T04:56:07.000+00:00
        type: null
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        path:
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/BackupType'
        size:
          format: int64
          type: integer
        time:
          format: date-time
          type: string
      type: object
    BackupType:
      enum:
      - scheduled
      - manual
      - update
      type: string
    BookSearchParam:
      enum:
      - q
      - title
      - author
      - publisher
      - genre
      - year
      type: string
    CertificateValidationType:
      enum:
      - enabled
      - disabledForLocalAddresses
      - disabled
      type: string
    Command:
      additionalProperties: false
      example:
        isExclusive: true
        clientUserAgent: clientUserAgent
        requiresDiskAccess: true
        name: name
        lastStartTime: 2000-01-23T04:56:07.000+00:00
        completionMessage: completionMessage
        trigger: null
        suppressMessages: true
        lastExecutionTime: 2000-01-23T04:56:07.000+00:00
        isTypeExclusive: true
        sendUpdatesToClient: true
        updateScheduledTask: true
      properties:
        sendUpdatesToClient:
          type: boolean
        updateScheduledTask:
          readOnly: true
          type: boolean
        completionMessage:
          nullable: true
          readOnly: true
          type: string
        requiresDiskAccess:
          readOnly: true
          type: boolean
        isExclusive:
          readOnly: true
          type: boolean
        isTypeExclusive:
          readOnly: true
          type: boolean
        name:
          nullable: true
          readOnly: true
          type: string
        lastExecutionTime:
          format: date-time
          nullable: true
          type: string
        lastStartTime:
          format: date-time
          nullable: true
          type: string
        trigger:
          $ref: '#/components/schemas/CommandTrigger'
        suppressMessages:
          type: boolean
        clientUserAgent:
          nullable: true
          type: string
      type: object
    CommandPriority:
      enum:
      - normal
      - high
      - low
      type: string
    CommandResource:
      additionalProperties: false
      example:
        exception: exception
        stateChangeTime: 2000-01-23T04:56:07.000+00:00
        clientUserAgent: clientUserAgent
        queued: 2000-01-23T04:56:07.000+00:00
        started: 2000-01-23T04:56:07.000+00:00
        trigger: null
        message: message
        body:
          isExclusive: true
          clientUserAgent: clientUserAgent
          requiresDiskAccess: true
          name: name
          lastStartTime: 2000-01-23T04:56:07.000+00:00
          completionMessage: completionMessage
          trigger: null
          suppressMessages: true
          lastExecutionTime: 2000-01-23T04:56:07.000+00:00
          isTypeExclusive: true
          sendUpdatesToClient: true
          updateScheduledTask: true
        priority: null
        duration: duration
        commandName: commandName
        name: name
        ended: 2000-01-23T04:56:07.000+00:00
        id: 0
        lastExecutionTime: 2000-01-23T04:56:07.000+00:00
        status: null
        sendUpdatesToClient: true
        updateScheduledTask: true
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        commandName:
          nullable: true
          type: string
        message:
          nullable: true
          type: string
        body:
          $ref: '#/components/schemas/Command'
        priority:
          $ref: '#/components/schemas/CommandPriority'
        status:
          $ref: '#/components/schemas/CommandStatus'
        queued:
          format: date-time
          type: string
        started:
          format: date-time
          nullable: true
          type: string
        ended:
          format: date-time
          nullable: true
          type: string
        duration:
          type: string
        exception:
          nullable: true
          type: string
        trigger:
          $ref: '#/components/schemas/CommandTrigger'
        clientUserAgent:
          nullable: true
          type: string
        stateChangeTime:
          format: date-time
          nullable: true
          type: string
        sendUpdatesToClient:
          type: boolean
        updateScheduledTask:
          type: boolean
        lastExecutionTime:
          format: date-time
          nullable: true
          type: string
      type: object
    CommandStatus:
      enum:
      - queued
      - started
      - completed
      - failed
      - aborted
      - cancelled
      - orphaned
      type: string
    CommandTrigger:
      enum:
      - unspecified
      - manual
      - scheduled
      type: string
    CustomFilterResource:
      additionalProperties: false
      example:
        id: 0
        label: label
        filters:
        - key: ""
        - key: ""
        type: type
      properties:
        id:
          format: int32
          type: integer
        type:
          nullable: true
          type: string
        label:
          nullable: true
          type: string
        filters:
          items:
            additionalProperties: {}
            type: object
          nullable: true
          type: array
      type: object
    DatabaseType:
      enum:
      - sqLite
      - postgreSQL
      type: string
    DevelopmentConfigResource:
      additionalProperties: false
      example:
        logIndexerResponse: true
        filterSentryEvents: true
        consoleLogLevel: consoleLogLevel
        id: 0
        logSql: true
        logRotate: 6
      properties:
        id:
          format: int32
          type: integer
        consoleLogLevel:
          nullable: true
          type: string
        logSql:
          type: boolean
        logIndexerResponse:
          type: boolean
        logRotate:
          format: int32
          type: integer
        filterSentryEvents:
          type: boolean
      type: object
    DownloadClientCategory:
      additionalProperties: false
      example:
        clientCategory: clientCategory
        categories:
        - 5
        - 5
      properties:
        clientCategory:
          nullable: true
          type: string
        categories:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      type: object
    DownloadClientConfigResource:
      additionalProperties: false
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      type: object
    DownloadClientResource:
      additionalProperties: false
      example:
        implementationName: implementationName
        implementation: implementation
        message:
          message: message
          type: null
        priority: 1
        tags:
        - 6
        - 6
        protocol: null
        supportsCategories: true
        presets:
        - null
        - null
        configContract: configContract
        enable: true
        name: name
        id: 0
        categories:
        - clientCategory: clientCategory
          categories:
          - 5
          - 5
        - clientCategory: clientCategory
          categories:
          - 5
          - 5
        fields:
        - helpText: helpText
          hidden: hidden
          advanced: true
          selectOptions:
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          selectOptionsProviderAction: selectOptionsProviderAction
          section: section
          label: label
          type: type
          unit: unit
          helpLink: helpLink
          name: name
          placeholder: placeholder
          value: ""
          order: 6
        - helpText: helpText
          hidden: hidden
          advanced: true
          selectOptions:
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          selectOptionsProviderAction: selectOptionsProviderAction
          section: section
          label: label
          type: type
          unit: unit
          helpLink: helpLink
          name: name
          placeholder: placeholder
          value: ""
          order: 6
        infoLink: infoLink
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        fields:
          items:
            $ref: '#/components/schemas/Field'
          nullable: true
          type: array
        implementationName:
          nullable: true
          type: string
        implementation:
          nullable: true
          type: string
        configContract:
          nullable: true
          type: string
        infoLink:
          nullable: true
          type: string
        message:
          $ref: '#/components/schemas/ProviderMessage'
        tags:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
          uniqueItems: true
        presets:
          items:
            $ref: '#/components/schemas/DownloadClientResource'
          nullable: true
          type: array
        enable:
          type: boolean
        protocol:
          $ref: '#/components/schemas/DownloadProtocol'
        priority:
          format: int32
          type: integer
        categories:
          items:
            $ref: '#/components/schemas/DownloadClientCategory'
          nullable: true
          type: array
        supportsCategories:
          type: boolean
      type: object
    DownloadProtocol:
      enum:
      - unknown
      - usenet
      - torrent
      type: string
    Field:
      additionalProperties: false
      example:
        helpText: helpText
        hidden: hidden
        advanced: true
        selectOptions:
        - hint: hint
          name: name
          parentValue: 5
          value: 1
          order: 5
        - hint: hint
          name: name
          parentValue: 5
          value: 1
          order: 5
        selectOptionsProviderAction: selectOptionsProviderAction
        section: section
        label: label
        type: type
        unit: unit
        helpLink: helpLink
        name: name
        placeholder: placeholder
        value: ""
        order: 6
      properties:
        order:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        label:
          nullable: true
          type: string
        unit:
          nullable: true
          type: string
        helpText:
          nullable: true
          type: string
        helpLink:
          nullable: true
          type: string
        value:
          nullable: true
        type:
          nullable: true
          type: string
        advanced:
          type: boolean
        selectOptions:
          items:
            $ref: '#/components/schemas/SelectOption'
          nullable: true
          type: array
        selectOptionsProviderAction:
          nullable: true
          type: string
        section:
          nullable: true
          type: string
        hidden:
          nullable: true
          type: string
        placeholder:
          nullable: true
          type: string
      type: object
    HealthCheckResult:
      enum:
      - ok
      - notice
      - warning
      - error
      type: string
    HealthResource:
      additionalProperties: false
      example:
        wikiUrl: wikiUrl
        id: 0
        source: source
        type: null
        message: message
      properties:
        id:
          format: int32
          type: integer
        source:
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/HealthCheckResult'
        message:
          nullable: true
          type: string
        wikiUrl:
          type: string
      type: object
    HistoryEventType:
      enum:
      - unknown
      - releaseGrabbed
      - indexerQuery
      - indexerRss
      - indexerAuth
      - indexerInfo
      type: string
    HistoryResource:
      additionalProperties: false
      example:
        date: 2000-01-23T04:56:07.000+00:00
        data:
          key: data
        downloadId: downloadId
        id: 5
        eventType: null
        indexerId: 5
        successful: true
      properties:
        id:
          format: int32
          type: integer
        indexerId:
          format: int32
          type: integer
        date:
          format: date-time
          type: string
        downloadId:
          nullable: true
          type: string
        successful:
          type: boolean
        eventType:
          $ref: '#/components/schemas/HistoryEventType'
        data:
          additionalProperties:
            nullable: true
            type: string
          nullable: true
          type: object
      type: object
    HistoryResourcePagingResource:
      additionalProperties: false
      example:
        sortDirection: null
        totalRecords: 1
        sortKey: sortKey
        records:
        - date: 2000-01-23T04:56:07.000+00:00
          data:
            key: data
          downloadId: downloadId
          id: 5
          eventType: null
          indexerId: 5
          successful: true
        - date: 2000-01-23T04:56:07.000+00:00
          data:
            key: data
          downloadId: downloadId
          id: 5
          eventType: null
          indexerId: 5
          successful: true
        pageSize: 6
        page: 0
        filters:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        page:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        sortKey:
          nullable: true
          type: string
        sortDirection:
          $ref: '#/components/schemas/SortDirection'
        filters:
          items:
            $ref: '#/components/schemas/PagingResourceFilter'
          nullable: true
          type: array
        totalRecords:
          format: int32
          type: integer
        records:
          items:
            $ref: '#/components/schemas/HistoryResource'
          nullable: true
          type: array
      type: object
    HostConfigResource:
      additionalProperties: false
      example:
        proxyEnabled: true
        historyCleanupDays: 7
        apiKey: apiKey
        consoleLogLevel: consoleLogLevel
        instanceName: instanceName
        proxyUsername: proxyUsername
        sslCertPassword: sslCertPassword
        branch: branch
        proxyBypassFilter: proxyBypassFilter
        enableSsl: true
        certificateValidation: null
        proxyPort: 5
        authenticationRequired: null
        password: password
        logLevel: logLevel
        backupInterval: 5
        updateAutomatically: true
        proxyHostname: proxyHostname
        id: 0
        backupFolder: backupFolder
        analyticsEnabled: true
        proxyBypassLocalAddresses: true
        launchBrowser: true
        proxyType: null
        proxyPassword: proxyPassword
        sslPort: 1
        bindAddress: bindAddress
        updateMechanism: null
        backupRetention: 2
        urlBase: urlBase
        port: 6
        authenticationMethod: null
        updateScriptPath: updateScriptPath
        sslCertPath: sslCertPath
        username: username
      properties:
        id:
          format: int32
          type: integer
        bindAddress:
          nullable: true
          type: string
        port:
          format: int32
          type: integer
        sslPort:
          format: int32
          type: integer
        enableSsl:
          type: boolean
        launchBrowser:
          type: boolean
        authenticationMethod:
          $ref: '#/components/schemas/AuthenticationType'
        authenticationRequired:
          $ref: '#/components/schemas/AuthenticationRequiredType'
        analyticsEnabled:
          type: boolean
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        logLevel:
          nullable: true
          type: string
        consoleLogLevel:
          nullable: true
          type: string
        branch:
          nullable: true
          type: string
        apiKey:
          nullable: true
          type: string
        sslCertPath:
          nullable: true
          type: string
        sslCertPassword:
          nullable: true
          type: string
        urlBase:
          nullable: true
          type: string
        instanceName:
          nullable: true
          type: string
        updateAutomatically:
          type: boolean
        updateMechanism:
          $ref: '#/components/schemas/UpdateMechanism'
        updateScriptPath:
          nullable: true
          type: string
        proxyEnabled:
          type: boolean
        proxyType:
          $ref: '#/components/schemas/ProxyType'
        proxyHostname:
          nullable: true
          type: string
        proxyPort:
          format: int32
          type: integer
        proxyUsername:
          nullable: true
          type: string
        proxyPassword:
          nullable: true
          type: string
        proxyBypassFilter:
          nullable: true
          type: string
        proxyBypassLocalAddresses:
          type: boolean
        certificateValidation:
          $ref: '#/components/schemas/CertificateValidationType'
        backupFolder:
          nullable: true
          type: string
        backupInterval:
          format: int32
          type: integer
        backupRetention:
          format: int32
          type: integer
        historyCleanupDays:
          format: int32
          type: integer
      type: object
    HostStatistics:
      additionalProperties: false
      example:
        host: host
        numberOfQueries: 1
        numberOfGrabs: 1
      properties:
        host:
          nullable: true
          type: string
        numberOfQueries:
          format: int32
          type: integer
        numberOfGrabs:
          format: int32
          type: integer
      type: object
    HttpUri:
      type: string
    IndexerCapabilityResource:
      additionalProperties: false
      example:
        supportsRawSearch: true
        limitsDefault: 2
        tvSearchParams:
        - null
        - null
        bookSearchParams:
        - null
        - null
        movieSearchParams:
        - null
        - null
        limitsMax: 5
        id: 5
        categories:
        - name: name
          description: description
          id: 7
          subCategories:
          - null
          - null
        - name: name
          description: description
          id: 7
          subCategories:
          - null
          - null
        musicSearchParams:
        - null
        - null
        searchParams:
        - null
        - null
      properties:
        id:
          format: int32
          type: integer
        limitsMax:
          format: int32
          nullable: true
          type: integer
        limitsDefault:
          format: int32
          nullable: true
          type: integer
        categories:
          items:
            $ref: '#/components/schemas/IndexerCategory'
          nullable: true
          type: array
        supportsRawSearch:
          type: boolean
        searchParams:
          items:
            $ref: '#/components/schemas/SearchParam'
          nullable: true
          type: array
        tvSearchParams:
          items:
            $ref: '#/components/schemas/TvSearchParam'
          nullable: true
          type: array
        movieSearchParams:
          items:
            $ref: '#/components/schemas/MovieSearchParam'
          nullable: true
          type: array
        musicSearchParams:
          items:
            $ref: '#/components/schemas/MusicSearchParam'
          nullable: true
          type: array
        bookSearchParams:
          items:
            $ref: '#/components/schemas/BookSearchParam'
          nullable: true
          type: array
      type: object
    IndexerCategory:
      additionalProperties: false
      example:
        name: name
        description: description
        id: 7
        subCategories:
        - null
        - null
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        subCategories:
          items:
            $ref: '#/components/schemas/IndexerCategory'
          nullable: true
          readOnly: true
          type: array
      type: object
    IndexerEditorResource:
      additionalProperties: false
      example:
        applyTags: null
        indexerIds:
        - 0
        - 0
        enable: true
        appProfileId: 6
        tags:
        - 1
        - 1
      properties:
        indexerIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        enable:
          nullable: true
          type: boolean
        appProfileId:
          format: int32
          nullable: true
          type: integer
        tags:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        applyTags:
          $ref: '#/components/schemas/ApplyTags'
      type: object
    IndexerPrivacy:
      enum:
      - public
      - semiPrivate
      - private
      type: string
    IndexerProxyResource:
      additionalProperties: false
      example:
        implementationName: implementationName
        testCommand: testCommand
        implementation: implementation
        link: link
        message:
          message: message
          type: null
        supportsOnHealthIssue: true
        tags:
        - 6
        - 6
        presets:
        - null
        - null
        configContract: configContract
        name: name
        id: 0
        includeHealthWarnings: true
        fields:
        - helpText: helpText
          hidden: hidden
          advanced: true
          selectOptions:
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          selectOptionsProviderAction: selectOptionsProviderAction
          section: section
          label: label
          type: type
          unit: unit
          helpLink: helpLink
          name: name
          placeholder: placeholder
          value: ""
          order: 6
        - helpText: helpText
          hidden: hidden
          advanced: true
          selectOptions:
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          selectOptionsProviderAction: selectOptionsProviderAction
          section: section
          label: label
          type: type
          unit: unit
          helpLink: helpLink
          name: name
          placeholder: placeholder
          value: ""
          order: 6
        onHealthIssue: true
        infoLink: infoLink
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        fields:
          items:
            $ref: '#/components/schemas/Field'
          nullable: true
          type: array
        implementationName:
          nullable: true
          type: string
        implementation:
          nullable: true
          type: string
        configContract:
          nullable: true
          type: string
        infoLink:
          nullable: true
          type: string
        message:
          $ref: '#/components/schemas/ProviderMessage'
        tags:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
          uniqueItems: true
        presets:
          items:
            $ref: '#/components/schemas/IndexerProxyResource'
          nullable: true
          type: array
        link:
          nullable: true
          type: string
        onHealthIssue:
          type: boolean
        supportsOnHealthIssue:
          type: boolean
        includeHealthWarnings:
          type: boolean
        testCommand:
          nullable: true
          type: string
      type: object
    IndexerResource:
      additionalProperties: false
      example:
        sortName: sortName
        added: 2000-01-23T04:56:07.000+00:00
        appProfileId: 1
        description: description
        privacy: null
        language: language
        protocol: null
        enable: true
        supportsPagination: true
        id: 0
        supportsRss: true
        infoLink: infoLink
        legacyUrls:
        - legacyUrls
        - legacyUrls
        redirect: true
        indexerUrls:
        - indexerUrls
        - indexerUrls
        definitionName: definitionName
        supportsSearch: true
        capabilities:
          supportsRawSearch: true
          limitsDefault: 2
          tvSearchParams:
          - null
          - null
          bookSearchParams:
          - null
          - null
          movieSearchParams:
          - null
          - null
          limitsMax: 5
          id: 5
          categories:
          - name: name
            description: description
            id: 7
            subCategories:
            - null
            - null
          - name: name
            description: description
            id: 7
            subCategories:
            - null
            - null
          musicSearchParams:
          - null
          - null
          searchParams:
          - null
          - null
        implementationName: implementationName
        supportsRedirect: true
        implementation: implementation
        message:
          message: message
          type: null
        encoding: encoding
        priority: 9
        tags:
        - 6
        - 6
        presets:
        - null
        - null
        configContract: configContract
        name: name
        fields:
        - helpText: helpText
          hidden: hidden
          advanced: true
          selectOptions:
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          selectOptionsProviderAction: selectOptionsProviderAction
          section: section
          label: label
          type: type
          unit: unit
          helpLink: helpLink
          name: name
          placeholder: placeholder
          value: ""
          order: 6
        - helpText: helpText
          hidden: hidden
          advanced: true
          selectOptions:
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          selectOptionsProviderAction: selectOptionsProviderAction
          section: section
          label: label
          type: type
          unit: unit
          helpLink: helpLink
          name: name
          placeholder: placeholder
          value: ""
          order: 6
        status:
          disabledTill: 2000-01-23T04:56:07.000+00:00
          initialFailure: 2000-01-23T04:56:07.000+00:00
          id: 3
          indexerId: 2
          mostRecentFailure: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        fields:
          items:
            $ref: '#/components/schemas/Field'
          nullable: true
          type: array
        implementationName:
          nullable: true
          type: string
        implementation:
          nullable: true
          type: string
        configContract:
          nullable: true
          type: string
        infoLink:
          nullable: true
          type: string
        message:
          $ref: '#/components/schemas/ProviderMessage'
        tags:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
          uniqueItems: true
        presets:
          items:
            $ref: '#/components/schemas/IndexerResource'
          nullable: true
          type: array
        indexerUrls:
          items:
            type: string
          nullable: true
          type: array
        legacyUrls:
          items:
            type: string
          nullable: true
          type: array
        definitionName:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        language:
          nullable: true
          type: string
        encoding:
          nullable: true
          type: string
        enable:
          type: boolean
        redirect:
          type: boolean
        supportsRss:
          type: boolean
        supportsSearch:
          type: boolean
        supportsRedirect:
          type: boolean
        supportsPagination:
          type: boolean
        appProfileId:
          format: int32
          type: integer
        protocol:
          $ref: '#/components/schemas/DownloadProtocol'
        privacy:
          $ref: '#/components/schemas/IndexerPrivacy'
        capabilities:
          $ref: '#/components/schemas/IndexerCapabilityResource'
        priority:
          format: int32
          type: integer
        added:
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/IndexerStatusResource'
        sortName:
          nullable: true
          type: string
      type: object
    IndexerStatistics:
      additionalProperties: false
      example:
        averageResponseTime: 1
        numberOfFailedRssQueries: 2
        numberOfFailedQueries: 9
        numberOfRssQueries: 2
        indexerName: indexerName
        numberOfAuthQueries: 7
        numberOfFailedGrabs: 3
        numberOfFailedAuthQueries: 4
        indexerId: 6
        numberOfQueries: 5
        numberOfGrabs: 5
      properties:
        indexerId:
          format: int32
          type: integer
        indexerName:
          nullable: true
          type: string
        averageResponseTime:
          format: int32
          type: integer
        numberOfQueries:
          format: int32
          type: integer
        numberOfGrabs:
          format: int32
          type: integer
        numberOfRssQueries:
          format: int32
          type: integer
        numberOfAuthQueries:
          format: int32
          type: integer
        numberOfFailedQueries:
          format: int32
          type: integer
        numberOfFailedGrabs:
          format: int32
          type: integer
        numberOfFailedRssQueries:
          format: int32
          type: integer
        numberOfFailedAuthQueries:
          format: int32
          type: integer
      type: object
    IndexerStatsResource:
      additionalProperties: false
      example:
        indexers:
        - averageResponseTime: 1
          numberOfFailedRssQueries: 2
          numberOfFailedQueries: 9
          numberOfRssQueries: 2
          indexerName: indexerName
          numberOfAuthQueries: 7
          numberOfFailedGrabs: 3
          numberOfFailedAuthQueries: 4
          indexerId: 6
          numberOfQueries: 5
          numberOfGrabs: 5
        - averageResponseTime: 1
          numberOfFailedRssQueries: 2
          numberOfFailedQueries: 9
          numberOfRssQueries: 2
          indexerName: indexerName
          numberOfAuthQueries: 7
          numberOfFailedGrabs: 3
          numberOfFailedAuthQueries: 4
          indexerId: 6
          numberOfQueries: 5
          numberOfGrabs: 5
        hosts:
        - host: host
          numberOfQueries: 1
          numberOfGrabs: 1
        - host: host
          numberOfQueries: 1
          numberOfGrabs: 1
        userAgents:
        - userAgent: userAgent
          numberOfQueries: 7
          numberOfGrabs: 1
        - userAgent: userAgent
          numberOfQueries: 7
          numberOfGrabs: 1
        id: 0
      properties:
        id:
          format: int32
          type: integer
        indexers:
          items:
            $ref: '#/components/schemas/IndexerStatistics'
          nullable: true
          type: array
        userAgents:
          items:
            $ref: '#/components/schemas/UserAgentStatistics'
          nullable: true
          type: array
        hosts:
          items:
            $ref: '#/components/schemas/HostStatistics'
          nullable: true
          type: array
      type: object
    IndexerStatusResource:
      additionalProperties: false
      example:
        disabledTill: 2000-01-23T04:56:07.000+00:00
        initialFailure: 2000-01-23T04:56:07.000+00:00
        id: 3
        indexerId: 2
        mostRecentFailure: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int32
          type: integer
        indexerId:
          format: int32
          type: integer
        disabledTill:
          format: date-time
          nullable: true
          type: string
        mostRecentFailure:
          format: date-time
          nullable: true
          type: string
        initialFailure:
          format: date-time
          nullable: true
          type: string
      type: object
    LocalizationOption:
      additionalProperties: false
      example:
        name: name
        value: value
      properties:
        name:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    LogFileResource:
      additionalProperties: false
      example:
        filename: filename
        downloadUrl: downloadUrl
        id: 0
        contentsUrl: contentsUrl
        lastWriteTime: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int32
          type: integer
        filename:
          nullable: true
          type: string
        lastWriteTime:
          format: date-time
          type: string
        contentsUrl:
          nullable: true
          type: string
        downloadUrl:
          nullable: true
          type: string
      type: object
    LogResource:
      additionalProperties: false
      example:
        exception: exception
        exceptionType: exceptionType
        method: method
        level: level
        logger: logger
        id: 5
        time: 2000-01-23T04:56:07.000+00:00
        message: message
      properties:
        id:
          format: int32
          type: integer
        time:
          format: date-time
          type: string
        exception:
          nullable: true
          type: string
        exceptionType:
          nullable: true
          type: string
        level:
          nullable: true
          type: string
        logger:
          nullable: true
          type: string
        message:
          nullable: true
          type: string
        method:
          nullable: true
          type: string
      type: object
    LogResourcePagingResource:
      additionalProperties: false
      example:
        sortDirection: null
        totalRecords: 1
        sortKey: sortKey
        records:
        - exception: exception
          exceptionType: exceptionType
          method: method
          level: level
          logger: logger
          id: 5
          time: 2000-01-23T04:56:07.000+00:00
          message: message
        - exception: exception
          exceptionType: exceptionType
          method: method
          level: level
          logger: logger
          id: 5
          time: 2000-01-23T04:56:07.000+00:00
          message: message
        pageSize: 6
        page: 0
        filters:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        page:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        sortKey:
          nullable: true
          type: string
        sortDirection:
          $ref: '#/components/schemas/SortDirection'
        filters:
          items:
            $ref: '#/components/schemas/PagingResourceFilter'
          nullable: true
          type: array
        totalRecords:
          format: int32
          type: integer
        records:
          items:
            $ref: '#/components/schemas/LogResource'
          nullable: true
          type: array
      type: object
    MovieSearchParam:
      enum:
      - q
      - imdbId
      - tmdbId
      - imdbTitle
      - imdbYear
      - traktId
      - genre
      - doubanId
      - year
      type: string
    MusicSearchParam:
      enum:
      - q
      - album
      - artist
      - label
      - year
      - genre
      - track
      type: string
    NotificationResource:
      additionalProperties: false
      example:
        supportsOnGrab: true
        implementationName: implementationName
        testCommand: testCommand
        implementation: implementation
        link: link
        message:
          message: message
          type: null
        onApplicationUpdate: true
        supportsOnHealthIssue: true
        tags:
        - 6
        - 6
        onGrab: true
        presets:
        - null
        - null
        configContract: configContract
        name: name
        includeManualGrabs: true
        id: 0
        includeHealthWarnings: true
        fields:
        - helpText: helpText
          hidden: hidden
          advanced: true
          selectOptions:
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          selectOptionsProviderAction: selectOptionsProviderAction
          section: section
          label: label
          type: type
          unit: unit
          helpLink: helpLink
          name: name
          placeholder: placeholder
          value: ""
          order: 6
        - helpText: helpText
          hidden: hidden
          advanced: true
          selectOptions:
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          - hint: hint
            name: name
            parentValue: 5
            value: 1
            order: 5
          selectOptionsProviderAction: selectOptionsProviderAction
          section: section
          label: label
          type: type
          unit: unit
          helpLink: helpLink
          name: name
          placeholder: placeholder
          value: ""
          order: 6
        supportsOnApplicationUpdate: true
        onHealthIssue: true
        infoLink: infoLink
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        fields:
          items:
            $ref: '#/components/schemas/Field'
          nullable: true
          type: array
        implementationName:
          nullable: true
          type: string
        implementation:
          nullable: true
          type: string
        configContract:
          nullable: true
          type: string
        infoLink:
          nullable: true
          type: string
        message:
          $ref: '#/components/schemas/ProviderMessage'
        tags:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
          uniqueItems: true
        presets:
          items:
            $ref: '#/components/schemas/NotificationResource'
          nullable: true
          type: array
        link:
          nullable: true
          type: string
        onGrab:
          type: boolean
        onHealthIssue:
          type: boolean
        onApplicationUpdate:
          type: boolean
        supportsOnGrab:
          type: boolean
        includeManualGrabs:
          type: boolean
        supportsOnHealthIssue:
          type: boolean
        includeHealthWarnings:
          type: boolean
        supportsOnApplicationUpdate:
          type: boolean
        testCommand:
          nullable: true
          type: string
      type: object
    PagingResourceFilter:
      additionalProperties: false
      example:
        value: value
        key: key
      properties:
        key:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    PingResource:
      additionalProperties: false
      example:
        status: status
      properties:
        status:
          nullable: true
          type: string
      type: object
    ProviderMessage:
      additionalProperties: false
      example:
        message: message
        type: null
      properties:
        message:
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/ProviderMessageType'
      type: object
    ProviderMessageType:
      enum:
      - info
      - warning
      - error
      type: string
    ProxyType:
      enum:
      - http
      - socks4
      - socks5
      type: string
    ReleaseResource:
      additionalProperties: false
      example:
        indexerFlags:
        - indexerFlags
        - indexerFlags
        fileName: fileName
        ageMinutes: 5.962133916683182
        leechers: 4
        imdbId: 3
        grabs: 7
        releaseHash: releaseHash
        commentUrl: commentUrl
        publishDate: 2000-01-23T04:56:07.000+00:00
        downloadUrl: downloadUrl
        infoHash: infoHash
        title: title
        seeders: 2
        approved: true
        protocol: null
        posterUrl: posterUrl
        infoUrl: infoUrl
        id: 0
        categories:
        - name: name
          description: description
          id: 7
          subCategories:
          - null
          - null
        - name: name
          description: description
          id: 7
          subCategories:
          - null
          - null
        indexerId: 9
        subGroup: subGroup
        ageHours: 1.4658129805029452
        indexer: indexer
        sortTitle: sortTitle
        size: 5
        magnetUrl: magnetUrl
        guid: guid
        files: 2
        age: 6
      properties:
        id:
          format: int32
          type: integer
        guid:
          nullable: true
          type: string
        age:
          format: int32
          type: integer
        ageHours:
          format: double
          type: number
        ageMinutes:
          format: double
          type: number
        size:
          format: int64
          type: integer
        files:
          format: int32
          nullable: true
          type: integer
        grabs:
          format: int32
          nullable: true
          type: integer
        indexerId:
          format: int32
          type: integer
        indexer:
          nullable: true
          type: string
        subGroup:
          nullable: true
          type: string
        releaseHash:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        sortTitle:
          nullable: true
          type: string
        approved:
          type: boolean
        imdbId:
          format: int32
          type: integer
        publishDate:
          format: date-time
          type: string
        commentUrl:
          nullable: true
          type: string
        downloadUrl:
          nullable: true
          type: string
        infoUrl:
          nullable: true
          type: string
        posterUrl:
          nullable: true
          type: string
        indexerFlags:
          items:
            type: string
          nullable: true
          type: array
        categories:
          items:
            $ref: '#/components/schemas/IndexerCategory'
          nullable: true
          type: array
        magnetUrl:
          nullable: true
          type: string
        infoHash:
          nullable: true
          type: string
        seeders:
          format: int32
          nullable: true
          type: integer
        leechers:
          format: int32
          nullable: true
          type: integer
        protocol:
          $ref: '#/components/schemas/DownloadProtocol'
        fileName:
          nullable: true
          readOnly: true
          type: string
      type: object
    RuntimeMode:
      enum:
      - console
      - service
      - tray
      type: string
    SearchParam:
      enum:
      - q
      type: string
    SelectOption:
      additionalProperties: false
      example:
        hint: hint
        name: name
        parentValue: 5
        value: 1
        order: 5
      properties:
        value:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        order:
          format: int32
          type: integer
        hint:
          nullable: true
          type: string
        parentValue:
          format: int32
          nullable: true
          type: integer
      type: object
    SortDirection:
      enum:
      - default
      - ascending
      - descending
      type: string
    SystemResource:
      additionalProperties: false
      example:
        runtimeVersion: runtimeVersion
        startupPath: startupPath
        instanceName: instanceName
        packageAuthor: packageAuthor
        packageUpdateMechanismMessage: packageUpdateMechanismMessage
        packageUpdateMechanism: null
        branch: branch
        databaseVersion: databaseVersion
        appData: appData
        isDebug: true
        mode: null
        osVersion: osVersion
        isWindows: true
        startTime: 2000-01-23T04:56:07.000+00:00
        isUserInteractive: true
        authentication: null
        isLinux: true
        isProduction: true
        buildTime: 2000-01-23T04:56:07.000+00:00
        appName: appName
        isNetCore: true
        packageVersion: packageVersion
        isAdmin: true
        osName: osName
        version: version
        databaseType: null
        migrationVersion: 0
        urlBase: urlBase
        isDocker: true
        isOsx: true
        runtimeName: runtimeName
      properties:
        appName:
          nullable: true
          type: string
        instanceName:
          nullable: true
          type: string
        version:
          nullable: true
          type: string
        buildTime:
          format: date-time
          type: string
        isDebug:
          type: boolean
        isProduction:
          type: boolean
        isAdmin:
          type: boolean
        isUserInteractive:
          type: boolean
        startupPath:
          nullable: true
          type: string
        appData:
          nullable: true
          type: string
        osName:
          nullable: true
          type: string
        osVersion:
          nullable: true
          type: string
        isNetCore:
          type: boolean
        isLinux:
          type: boolean
        isOsx:
          type: boolean
        isWindows:
          type: boolean
        isDocker:
          type: boolean
        mode:
          $ref: '#/components/schemas/RuntimeMode'
        branch:
          nullable: true
          type: string
        databaseType:
          $ref: '#/components/schemas/DatabaseType'
        databaseVersion:
          type: string
        authentication:
          $ref: '#/components/schemas/AuthenticationType'
        migrationVersion:
          format: int32
          type: integer
        urlBase:
          nullable: true
          type: string
        runtimeVersion:
          type: string
        runtimeName:
          nullable: true
          type: string
        startTime:
          format: date-time
          type: string
        packageVersion:
          nullable: true
          type: string
        packageAuthor:
          nullable: true
          type: string
        packageUpdateMechanism:
          $ref: '#/components/schemas/UpdateMechanism'
        packageUpdateMechanismMessage:
          nullable: true
          type: string
      type: object
    TagDetailsResource:
      additionalProperties: false
      example:
        indexerProxyIds:
        - 5
        - 5
        indexerIds:
        - 1
        - 1
        notificationIds:
        - 6
        - 6
        id: 0
        label: label
      properties:
        id:
          format: int32
          type: integer
        label:
          nullable: true
          type: string
        notificationIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        indexerIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        indexerProxyIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      type: object
    TagResource:
      additionalProperties: false
      example:
        id: 0
        label: label
      properties:
        id:
          format: int32
          type: integer
        label:
          nullable: true
          type: string
      type: object
    TaskResource:
      additionalProperties: false
      example:
        lastDuration: lastDuration
        lastExecution: 2000-01-23T04:56:07.000+00:00
        name: name
        lastStartTime: 2000-01-23T04:56:07.000+00:00
        taskName: taskName
        interval: 6
        id: 0
        nextExecution: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        taskName:
          nullable: true
          type: string
        interval:
          format: int32
          type: integer
        lastExecution:
          format: date-time
          type: string
        lastStartTime:
          format: date-time
          type: string
        nextExecution:
          format: date-time
          type: string
        lastDuration:
          type: string
      type: object
    TimeSpan:
      type: string
    TvSearchParam:
      enum:
      - q
      - season
      - ep
      - imdbId
      - tvdbId
      - rId
      - tvMazeId
      - traktId
      - tmdbId
      - doubanId
      - genre
      - year
      type: string
    UiConfigResource:
      additionalProperties: false
      example:
        calendarWeekColumnHeader: calendarWeekColumnHeader
        showRelativeDates: true
        enableColorImpairedMode: true
        uiLanguage: uiLanguage
        firstDayOfWeek: 6
        timeFormat: timeFormat
        shortDateFormat: shortDateFormat
        theme: theme
        id: 0
        longDateFormat: longDateFormat
      properties:
        id:
          format: int32
          type: integer
        firstDayOfWeek:
          format: int32
          type: integer
        calendarWeekColumnHeader:
          nullable: true
          type: string
        shortDateFormat:
          nullable: true
          type: string
        longDateFormat:
          nullable: true
          type: string
        timeFormat:
          nullable: true
          type: string
        showRelativeDates:
          type: boolean
        enableColorImpairedMode:
          type: boolean
        uiLanguage:
          nullable: true
          type: string
        theme:
          nullable: true
          type: string
      type: object
    UpdateChanges:
      additionalProperties: false
      example:
        new:
        - new
        - new
        fixed:
        - fixed
        - fixed
      properties:
        new:
          items:
            type: string
          nullable: true
          type: array
        fixed:
          items:
            type: string
          nullable: true
          type: array
      type: object
    UpdateMechanism:
      enum:
      - builtIn
      - script
      - external
      - apt
      - docker
      type: string
    UpdateResource:
      additionalProperties: false
      example:
        installed: true
        fileName: fileName
        installedOn: 2000-01-23T04:56:07.000+00:00
        releaseDate: 2000-01-23T04:56:07.000+00:00
        changes:
          new:
          - new
          - new
          fixed:
          - fixed
          - fixed
        id: 0
        installable: true
        version: version
        branch: branch
        url: url
        hash: hash
        latest: true
      properties:
        id:
          format: int32
          type: integer
        version:
          type: string
        branch:
          nullable: true
          type: string
        releaseDate:
          format: date-time
          type: string
        fileName:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        installed:
          type: boolean
        installedOn:
          format: date-time
          nullable: true
          type: string
        installable:
          type: boolean
        latest:
          type: boolean
        changes:
          $ref: '#/components/schemas/UpdateChanges'
        hash:
          nullable: true
          type: string
      type: object
    UserAgentStatistics:
      additionalProperties: false
      example:
        userAgent: userAgent
        numberOfQueries: 7
        numberOfGrabs: 1
      properties:
        userAgent:
          nullable: true
          type: string
        numberOfQueries:
          format: int32
          type: integer
        numberOfGrabs:
          format: int32
          type: integer
      type: object
    Version:
      type: string
    CreateLogin_request:
      properties:
        Username:
          type: string
        Password:
          type: string
        RememberMe:
          type: string
      type: object
  securitySchemes:
    X-Api-Key:
      description: Apikey passed as header
      in: header
      name: X-Api-Key
      type: apiKey
    apikey:
      description: Apikey passed as header
      in: query
      name: apikey
      type: apiKey
