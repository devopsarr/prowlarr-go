/*
Prowlarr

Prowlarr API docs

API version: v1.23.1.4708
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package prowlarr

import (
	"encoding/json"
)

// checks if the IndexerCapabilityResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndexerCapabilityResource{}

// IndexerCapabilityResource struct for IndexerCapabilityResource
type IndexerCapabilityResource struct {
	Id *int32 `json:"id,omitempty"`
	LimitsMax NullableInt32 `json:"limitsMax,omitempty"`
	LimitsDefault NullableInt32 `json:"limitsDefault,omitempty"`
	Categories []IndexerCategory `json:"categories,omitempty"`
	SupportsRawSearch *bool `json:"supportsRawSearch,omitempty"`
	SearchParams []SearchParam `json:"searchParams,omitempty"`
	TvSearchParams []TvSearchParam `json:"tvSearchParams,omitempty"`
	MovieSearchParams []MovieSearchParam `json:"movieSearchParams,omitempty"`
	MusicSearchParams []MusicSearchParam `json:"musicSearchParams,omitempty"`
	BookSearchParams []BookSearchParam `json:"bookSearchParams,omitempty"`
}

// NewIndexerCapabilityResource instantiates a new IndexerCapabilityResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndexerCapabilityResource() *IndexerCapabilityResource {
	this := IndexerCapabilityResource{}
	return &this
}

// NewIndexerCapabilityResourceWithDefaults instantiates a new IndexerCapabilityResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndexerCapabilityResourceWithDefaults() *IndexerCapabilityResource {
	this := IndexerCapabilityResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IndexerCapabilityResource) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerCapabilityResource) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IndexerCapabilityResource) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *IndexerCapabilityResource) SetId(v int32) {
	o.Id = &v
}

// GetLimitsMax returns the LimitsMax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexerCapabilityResource) GetLimitsMax() int32 {
	if o == nil || IsNil(o.LimitsMax.Get()) {
		var ret int32
		return ret
	}
	return *o.LimitsMax.Get()
}

// GetLimitsMaxOk returns a tuple with the LimitsMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexerCapabilityResource) GetLimitsMaxOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LimitsMax.Get(), o.LimitsMax.IsSet()
}

// HasLimitsMax returns a boolean if a field has been set.
func (o *IndexerCapabilityResource) HasLimitsMax() bool {
	if o != nil && o.LimitsMax.IsSet() {
		return true
	}

	return false
}

// SetLimitsMax gets a reference to the given NullableInt32 and assigns it to the LimitsMax field.
func (o *IndexerCapabilityResource) SetLimitsMax(v int32) {
	o.LimitsMax.Set(&v)
}
// SetLimitsMaxNil sets the value for LimitsMax to be an explicit nil
func (o *IndexerCapabilityResource) SetLimitsMaxNil() {
	o.LimitsMax.Set(nil)
}

// UnsetLimitsMax ensures that no value is present for LimitsMax, not even an explicit nil
func (o *IndexerCapabilityResource) UnsetLimitsMax() {
	o.LimitsMax.Unset()
}

// GetLimitsDefault returns the LimitsDefault field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexerCapabilityResource) GetLimitsDefault() int32 {
	if o == nil || IsNil(o.LimitsDefault.Get()) {
		var ret int32
		return ret
	}
	return *o.LimitsDefault.Get()
}

// GetLimitsDefaultOk returns a tuple with the LimitsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexerCapabilityResource) GetLimitsDefaultOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LimitsDefault.Get(), o.LimitsDefault.IsSet()
}

// HasLimitsDefault returns a boolean if a field has been set.
func (o *IndexerCapabilityResource) HasLimitsDefault() bool {
	if o != nil && o.LimitsDefault.IsSet() {
		return true
	}

	return false
}

// SetLimitsDefault gets a reference to the given NullableInt32 and assigns it to the LimitsDefault field.
func (o *IndexerCapabilityResource) SetLimitsDefault(v int32) {
	o.LimitsDefault.Set(&v)
}
// SetLimitsDefaultNil sets the value for LimitsDefault to be an explicit nil
func (o *IndexerCapabilityResource) SetLimitsDefaultNil() {
	o.LimitsDefault.Set(nil)
}

// UnsetLimitsDefault ensures that no value is present for LimitsDefault, not even an explicit nil
func (o *IndexerCapabilityResource) UnsetLimitsDefault() {
	o.LimitsDefault.Unset()
}

// GetCategories returns the Categories field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexerCapabilityResource) GetCategories() []IndexerCategory {
	if o == nil {
		var ret []IndexerCategory
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexerCapabilityResource) GetCategoriesOk() ([]IndexerCategory, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *IndexerCapabilityResource) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []IndexerCategory and assigns it to the Categories field.
func (o *IndexerCapabilityResource) SetCategories(v []IndexerCategory) {
	o.Categories = v
}

// GetSupportsRawSearch returns the SupportsRawSearch field value if set, zero value otherwise.
func (o *IndexerCapabilityResource) GetSupportsRawSearch() bool {
	if o == nil || IsNil(o.SupportsRawSearch) {
		var ret bool
		return ret
	}
	return *o.SupportsRawSearch
}

// GetSupportsRawSearchOk returns a tuple with the SupportsRawSearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndexerCapabilityResource) GetSupportsRawSearchOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsRawSearch) {
		return nil, false
	}
	return o.SupportsRawSearch, true
}

// HasSupportsRawSearch returns a boolean if a field has been set.
func (o *IndexerCapabilityResource) HasSupportsRawSearch() bool {
	if o != nil && !IsNil(o.SupportsRawSearch) {
		return true
	}

	return false
}

// SetSupportsRawSearch gets a reference to the given bool and assigns it to the SupportsRawSearch field.
func (o *IndexerCapabilityResource) SetSupportsRawSearch(v bool) {
	o.SupportsRawSearch = &v
}

// GetSearchParams returns the SearchParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexerCapabilityResource) GetSearchParams() []SearchParam {
	if o == nil {
		var ret []SearchParam
		return ret
	}
	return o.SearchParams
}

// GetSearchParamsOk returns a tuple with the SearchParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexerCapabilityResource) GetSearchParamsOk() ([]SearchParam, bool) {
	if o == nil || IsNil(o.SearchParams) {
		return nil, false
	}
	return o.SearchParams, true
}

// HasSearchParams returns a boolean if a field has been set.
func (o *IndexerCapabilityResource) HasSearchParams() bool {
	if o != nil && !IsNil(o.SearchParams) {
		return true
	}

	return false
}

// SetSearchParams gets a reference to the given []SearchParam and assigns it to the SearchParams field.
func (o *IndexerCapabilityResource) SetSearchParams(v []SearchParam) {
	o.SearchParams = v
}

// GetTvSearchParams returns the TvSearchParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexerCapabilityResource) GetTvSearchParams() []TvSearchParam {
	if o == nil {
		var ret []TvSearchParam
		return ret
	}
	return o.TvSearchParams
}

// GetTvSearchParamsOk returns a tuple with the TvSearchParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexerCapabilityResource) GetTvSearchParamsOk() ([]TvSearchParam, bool) {
	if o == nil || IsNil(o.TvSearchParams) {
		return nil, false
	}
	return o.TvSearchParams, true
}

// HasTvSearchParams returns a boolean if a field has been set.
func (o *IndexerCapabilityResource) HasTvSearchParams() bool {
	if o != nil && !IsNil(o.TvSearchParams) {
		return true
	}

	return false
}

// SetTvSearchParams gets a reference to the given []TvSearchParam and assigns it to the TvSearchParams field.
func (o *IndexerCapabilityResource) SetTvSearchParams(v []TvSearchParam) {
	o.TvSearchParams = v
}

// GetMovieSearchParams returns the MovieSearchParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexerCapabilityResource) GetMovieSearchParams() []MovieSearchParam {
	if o == nil {
		var ret []MovieSearchParam
		return ret
	}
	return o.MovieSearchParams
}

// GetMovieSearchParamsOk returns a tuple with the MovieSearchParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexerCapabilityResource) GetMovieSearchParamsOk() ([]MovieSearchParam, bool) {
	if o == nil || IsNil(o.MovieSearchParams) {
		return nil, false
	}
	return o.MovieSearchParams, true
}

// HasMovieSearchParams returns a boolean if a field has been set.
func (o *IndexerCapabilityResource) HasMovieSearchParams() bool {
	if o != nil && !IsNil(o.MovieSearchParams) {
		return true
	}

	return false
}

// SetMovieSearchParams gets a reference to the given []MovieSearchParam and assigns it to the MovieSearchParams field.
func (o *IndexerCapabilityResource) SetMovieSearchParams(v []MovieSearchParam) {
	o.MovieSearchParams = v
}

// GetMusicSearchParams returns the MusicSearchParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexerCapabilityResource) GetMusicSearchParams() []MusicSearchParam {
	if o == nil {
		var ret []MusicSearchParam
		return ret
	}
	return o.MusicSearchParams
}

// GetMusicSearchParamsOk returns a tuple with the MusicSearchParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexerCapabilityResource) GetMusicSearchParamsOk() ([]MusicSearchParam, bool) {
	if o == nil || IsNil(o.MusicSearchParams) {
		return nil, false
	}
	return o.MusicSearchParams, true
}

// HasMusicSearchParams returns a boolean if a field has been set.
func (o *IndexerCapabilityResource) HasMusicSearchParams() bool {
	if o != nil && !IsNil(o.MusicSearchParams) {
		return true
	}

	return false
}

// SetMusicSearchParams gets a reference to the given []MusicSearchParam and assigns it to the MusicSearchParams field.
func (o *IndexerCapabilityResource) SetMusicSearchParams(v []MusicSearchParam) {
	o.MusicSearchParams = v
}

// GetBookSearchParams returns the BookSearchParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndexerCapabilityResource) GetBookSearchParams() []BookSearchParam {
	if o == nil {
		var ret []BookSearchParam
		return ret
	}
	return o.BookSearchParams
}

// GetBookSearchParamsOk returns a tuple with the BookSearchParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndexerCapabilityResource) GetBookSearchParamsOk() ([]BookSearchParam, bool) {
	if o == nil || IsNil(o.BookSearchParams) {
		return nil, false
	}
	return o.BookSearchParams, true
}

// HasBookSearchParams returns a boolean if a field has been set.
func (o *IndexerCapabilityResource) HasBookSearchParams() bool {
	if o != nil && !IsNil(o.BookSearchParams) {
		return true
	}

	return false
}

// SetBookSearchParams gets a reference to the given []BookSearchParam and assigns it to the BookSearchParams field.
func (o *IndexerCapabilityResource) SetBookSearchParams(v []BookSearchParam) {
	o.BookSearchParams = v
}

func (o IndexerCapabilityResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndexerCapabilityResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.LimitsMax.IsSet() {
		toSerialize["limitsMax"] = o.LimitsMax.Get()
	}
	if o.LimitsDefault.IsSet() {
		toSerialize["limitsDefault"] = o.LimitsDefault.Get()
	}
	if o.Categories != nil {
		toSerialize["categories"] = o.Categories
	}
	if !IsNil(o.SupportsRawSearch) {
		toSerialize["supportsRawSearch"] = o.SupportsRawSearch
	}
	if o.SearchParams != nil {
		toSerialize["searchParams"] = o.SearchParams
	}
	if o.TvSearchParams != nil {
		toSerialize["tvSearchParams"] = o.TvSearchParams
	}
	if o.MovieSearchParams != nil {
		toSerialize["movieSearchParams"] = o.MovieSearchParams
	}
	if o.MusicSearchParams != nil {
		toSerialize["musicSearchParams"] = o.MusicSearchParams
	}
	if o.BookSearchParams != nil {
		toSerialize["bookSearchParams"] = o.BookSearchParams
	}
	return toSerialize, nil
}

type NullableIndexerCapabilityResource struct {
	value *IndexerCapabilityResource
	isSet bool
}

func (v NullableIndexerCapabilityResource) Get() *IndexerCapabilityResource {
	return v.value
}

func (v *NullableIndexerCapabilityResource) Set(val *IndexerCapabilityResource) {
	v.value = val
	v.isSet = true
}

func (v NullableIndexerCapabilityResource) IsSet() bool {
	return v.isSet
}

func (v *NullableIndexerCapabilityResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndexerCapabilityResource(val *IndexerCapabilityResource) *NullableIndexerCapabilityResource {
	return &NullableIndexerCapabilityResource{value: val, isSet: true}
}

func (v NullableIndexerCapabilityResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndexerCapabilityResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


